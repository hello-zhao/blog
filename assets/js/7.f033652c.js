(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{50:function(e,r,t){e.exports=t.p+"assets/img/url.08afc004.png"},65:function(e,r,t){"use strict";t.r(r);var v=t(0),_=Object(v.a)({},function(){var e=this,r=e.$createElement,v=e._self._c||r;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"输入url回车都经历了什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#输入url回车都经历了什么","aria-hidden":"true"}},[e._v("#")]),e._v(" 输入url回车都经历了什么")]),e._v(" "),v("div",{staticClass:"tip custom-block"},[v("ul",[v("li",[e._v("用户输入 URL 地址")]),e._v(" "),v("li",[e._v("对 URL 地址进行 DNS 域名解析")]),e._v(" "),v("li",[e._v("建立 TCP 连接（三次握手）")]),e._v(" "),v("li",[e._v("浏览器发起 HTTP 请求报文")]),e._v(" "),v("li",[e._v("服务器返回 HTTP 响应报文")]),e._v(" "),v("li",[e._v("关闭 TCP 连接（四次挥手）")]),e._v(" "),v("li",[e._v("浏览器解析文档资源并渲染页面")])])]),e._v(" "),v("h2",{attrs:{id:"dns-解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dns-解析","aria-hidden":"true"}},[e._v("#")]),e._v(" DNS 解析")]),e._v(" "),v("ol",[v("li",[e._v("浏览器在自身缓存中查找 DNS 中的解析记录(存在且未过期则返回IP地址,解析结束)")]),e._v(" "),v("li",[e._v("查找操作系统中的 hosts 文件是否有该域名的 DNS 解析记录(存在且未过期则返回IP地址,解析结束)")]),e._v(" "),v("li",[e._v("DNS服务器递归查找")])]),e._v(" "),v("h2",{attrs:{id:"tcp-建立连接-三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp-建立连接-三次握手","aria-hidden":"true"}},[e._v("#")]),e._v(" TCP 建立连接 (三次握手)")]),e._v(" "),v("ol",[v("li",[v("code",[e._v("我可以连你嘛？")]),e._v(" 客户端发送一个包给服务器，服务器收到回确认客户端是状态是ok的")]),e._v(" "),v("li",[v("code",[e._v("可以。")]),e._v(" 服务器发送一个包给客户端，客户端收到后确认服务器状态是好的，也确认自己也是没问题的")]),e._v(" "),v("li",[v("code",[e._v("那我连了。")]),e._v(" 服务器收到后，确认服务器的收发能力也是ok的；开始建立正常的通信")])]),e._v(" "),v("h2",{attrs:{id:"tcp-断开连接（四次挥手）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp-断开连接（四次挥手）","aria-hidden":"true"}},[e._v("#")]),e._v(" TCP 断开连接（四次挥手）")]),e._v(" "),v("ol",[v("li",[v("code",[e._v("客户端：我要睡了")]),e._v(" Client 向 Server 发送一个网络包，告诉并停止再发送数据，主动关闭 TCP 进入FIN-WAIT-1（终止等待1）状态，等待 Server 的确认。")]),e._v(" "),v("li",[v("code",[e._v("服务端：嗯，睡吧，晚安")]),e._v(" Server收到 Client 的网络包后即发出确认关闭的网络包，Server 进入 CLOSE-WAIT（关闭等待）状态，此时的 TCP 处于半关闭状态，Client 到 Server 的连接释放。")]),e._v(" "),v("li",[v("code",[e._v("服务端：我也要睡了")]),e._v(" Server 已经没有要向 Client 发出的数据了，Server 再次发出确认关闭的包，Server 进入 LAST-ACK（最后确认）状态，等待 Client 的确认。")]),e._v(" "),v("li",[v("code",[e._v("客户端：晚安，好梦")]),e._v(" Client 收到 Server 的连接释放报文段后，对此发出确认关闭的包，Client 进入 TIME-WAIT（时间等待）状态，经过时间等待计时器设置的时间后，Client 才进入 CLOSED 状态。")])]),e._v(" "),v("h2",{attrs:{id:"浏览器渲染页面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染页面","aria-hidden":"true"}},[e._v("#")]),e._v(" 浏览器渲染页面")]),e._v(" "),v("ol",[v("li",[e._v("浏览器通过 HTMLParser 根据深度遍历的原则把 HTML 解析成 DOM Tree。")]),e._v(" "),v("li",[e._v("浏览器通过 CSSParser 将 CSS 解析成 CSS Rule Tree（CSSOM Tree）。")]),e._v(" "),v("li",[e._v("浏览器将 JavaScript 通过 DOM API 或者 CSSOM API 将 JS 代码解析并应用到布局中，按要求呈现响应的结果。")]),e._v(" "),v("li",[e._v("根据 DOM 树和 CSSOM 树来构造 render Tree。")]),e._v(" "),v("li",[e._v("layout：重排（也可以叫回流），当 render tree 中任一节点的几何尺寸发生改变，render tree 就会重新布局，重新来计算所有节点在屏幕的位置。")]),e._v(" "),v("li",[e._v("repaint：重绘，当 render tree 中任一元素样式属性（几何尺寸没改变）发生改变时，render tree 都会重新画，比如字体颜色，背景等变化。")]),e._v(" "),v("li",[e._v("paint：遍历 render tree，并调动硬件图形 API 来绘制每个节点。")])]),e._v(" "),v("p",[v("img",{attrs:{src:t(50),alt:""}})]),e._v(" "),v("p",[v("a",{attrs:{href:"https://juejin.im/post/5c87b54ce51d455f7943dddb#chapter-three",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考链接"),v("OutboundLink")],1)])])},[],!1,null,null,null);r.default=_.exports}}]);